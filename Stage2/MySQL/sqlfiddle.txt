CREATE TABLE customers (
    customer_id INT AUTO_INCREMENT PRIMARY KEY,
    surname VARCHAR(50),
    first_name VARCHAR(50),
    city VARCHAR(50),
    date_of_birth DATE,
    gender CHAR(1)
);

INSERT INTO customers (surname, first_name, city, date_of_birth, gender)
VALUES
('Smith', 'John', 'New York', '1985-04-12', 'M'),
('Johnson', 'Emma', 'Los Angeles', '1990-06-25', 'F'),
('Williams', 'Olivia', 'Chicago', '1988-09-15', 'F'),
('Jones', 'Noah', 'Houston', '1992-11-05', 'M'),
('Brown', 'Sophia', 'Phoenix', '1986-02-19', 'F'),
('Davis', 'Liam', 'Philadelphia', '1983-03-22', 'M'),
('Miller', 'Isabella', 'San Antonio', '1991-07-13', 'F'),
('Wilson', 'James', 'San Diego', '1989-10-30', 'M'),
('Moore', 'Mia', 'Dallas', '1993-01-14', 'F'),
('Taylor', 'Lucas', 'San Jose', '1984-08-27', 'M');

select customer_id, first_name, surname, city,date_of_birth,gender from customers where first_name='john';

select * from customers;

select DISTINCT city from customers;


select concat(first_name, ' ',surname,' lives in ', city, ' he/she was born in ',YEAR(date_of_birth)) as "Customer Information" from customers where city IN("new york", "chicago", "lion") and gender = 'F';

select count(*) as "Number of customers in Chicago" from customers where city = "chicago";

select count(*) as "Number of Females born after 1986", sum(date_of_birth) as "useless column" from customers where gender = "F" and YEAR(date_of_birth) > 1986;

SELECT `date_of_birth` as "Birth date" FROM `customers` WHERE `first_name` = "James" OR `first_name` = "Mia";

SELECT date_of_birth AS "Birth Date" FROM customers WHERE first_name IN ("MIA", "JAMES");

SELECT CONCAT(first_name, " ", surname) as Name,
city as Hometown,
year(date_of_birth) as "Year Born" 
FROM CUSTOMERS 
WHERE year(date_of_birth) BETWEEN 1985 AND 1995
AND city in("houston", "los angeles", "new york")
ORDER BY date_of_birth DESC;

SELECT count(*) as "Number of customers names Johnson" FROM CUSTOMERS where surname = 'Johnson';

select count(*) as "Female clients",
(SELECT COUNT(*) from customers where gender = "M") as "Male clients" 
from customers where gender = "F";

select count(*) as "number of people per gender", gender
from customers
group by gender;


select count(*) as "number of people per gender", gender
from customers
group by gender
having gender = "M";

select count(*) as "number of people per gender", gender
from customers 
where gender = "M"
group by gender;

select count(*) as "countgender", gender
from customers
group by gender
having countgender > 4 ;

select city, count(*) as "number of customers"
from customers
group by city
having "number of customers" < 3;

SELECT gender, year(date_of_birth) AS "Year of birth", COUNT(*) as Count
FROM customers
GROUP BY gender, year(date_of_birth)
HAVING Count > 1
ORDER BY year(date_of_birth), gender;

------------------------------------------------------------------------
-- Create the Products table
CREATE TABLE Products (
    prod_id INT AUTO_INCREMENT PRIMARY KEY,
    Prod_name VARCHAR(20),
    Prod_description VARCHAR(100),
    Stock INT,
    Unitprice DECIMAL(10,2),
    Prod_category VARCHAR(20),
    Last_Sold DATE,
    Added_To_Stock DATE
);

-- Insert 50 example records into the Products table
INSERT INTO Products (Prod_name, Prod_description, Stock, Unitprice, Prod_category, Last_Sold, Added_To_Stock)
VALUES
    ('Laptop', '15-inch display, 256GB SSD', 50, 999.99, 'Electronics', '2024-08-01', '2024-07-25'),
    ('Smartphone', '128GB storage, 12MP camera', 120, 699.99, 'Electronics', '2024-08-05', '2024-07-30'),
    ('Headphones', 'Noise-cancelling, Bluetooth', 200, 149.99, 'Electronics', '2024-08-02', '2024-07-28'),
    ('Keyboard', 'Mechanical, RGB backlight', 80, 89.99, 'Accessories', '2024-08-03', '2024-07-27'),
    ('Mouse', 'Wireless, ergonomic design', 150, 49.99, 'Accessories', '2024-08-01', '2024-07-26'),
    ('Monitor', '24-inch, Full HD', 60, 179.99, 'Electronics', '2024-08-04', '2024-07-29'),
    ('Printer', 'Laser, wireless', 40, 199.99, 'Electronics', '2024-08-06', '2024-07-31'),
    ('Tablet', '10-inch display, 64GB', 90, 329.99, 'Electronics', '2024-08-03', '2024-07-25'),
    ('Charger', 'Fast charging, USB-C', 300, 29.99, 'Accessories', '2024-08-02', '2024-07-30'),
    ('Camera', 'Mirrorless, 24MP', 30, 799.99, 'Electronics', '2024-08-07', '2024-07-28'),
    ('Smartwatch', 'Heart rate monitor, GPS', 100, 199.99, 'Electronics', '2024-08-01', '2024-07-26'),
    ('Speaker', 'Bluetooth, waterproof', 70, 99.99, 'Electronics', '2024-08-05', '2024-07-27'),
    ('Router', 'Dual-band, Gigabit', 110, 59.99, 'Electronics', '2024-08-03', '2024-07-29'),
    ('Flash Drive', '64GB, USB 3.0', 500, 19.99, 'Accessories', '2024-08-04', '2024-07-30'),
    ('External HDD', '1TB, USB 3.0', 45, 79.99, 'Accessories', '2024-08-06', '2024-07-31'),
    ('Gaming Console', 'Next-gen, 512GB SSD', 25, 499.99, 'Electronics', '2024-08-02', '2024-07-25'),
    ('TV', '50-inch, 4K UHD', 35, 599.99, 'Electronics', '2024-08-01', '2024-07-26'),
    ('VR Headset', 'Immersive experience', 20, 299.99, 'Electronics', '2024-08-07', '2024-07-28'),
    ('Drone', '4K camera, GPS', 15, 899.99, 'Electronics', '2024-08-04', '2024-07-29'),
    ('Power Bank', '20000mAh, USB-C', 250, 39.99, 'Accessories', '2024-08-03', '2024-07-30'),
    ('Microphone', 'USB, studio quality', 55, 129.99, 'Accessories', '2024-08-02', '2024-07-31'),
    ('Webcam', '1080p, Autofocus', 75, 59.99, 'Accessories', '2024-08-01', '2024-07-25'),
    ('Smart Thermostat', 'Wi-Fi, Voice control', 65, 149.99, 'Electronics', '2024-08-06', '2024-07-26'),
    ('E-Reader', '6-inch, 8GB', 90, 129.99, 'Electronics', '2024-08-03', '2024-07-27'),
    ('Action Camera', '4K, waterproof', 35, 249.99, 'Electronics', '2024-08-07', '2024-07-28'),
    ('Security Camera', 'Wi-Fi, night vision', 120, 79.99, 'Electronics', '2024-08-05', '2024-07-29'),
    ('Projector', '1080p, Portable', 25, 399.99, 'Electronics', '2024-08-04', '2024-07-30'),
    ('Smart Light', 'Wi-Fi, RGB', 200, 29.99, 'Accessories', '2024-08-01', '2024-07-31'),
    ('Electric Kettle', '1.7L, Stainless Steel', 150, 49.99, 'Home', '2024-08-02', '2024-07-25'),
    ('Blender', '600W, 1.5L', 100, 89.99, 'Home', '2024-08-06', '2024-07-26'),
    ('Air Purifier', 'HEPA filter, 300 sq.ft.', 40, 199.99, 'Home', '2024-08-03', '2024-07-27'),
    ('Robot Vacuum', 'Wi-Fi, Self-charging', 60, 299.99, 'Home', '2024-08-05', '2024-07-28'),
    ('Electric Toothbrush', 'Rechargeable, 2 heads', 200, 39.99, 'Personal', '2024-08-01', '2024-07-29'),
    ('Hair Dryer', 'Ionic, 1875W', 90, 69.99, 'Personal', '2024-08-04', '2024-07-30'),
    ('Shaver', 'Electric, cordless', 120, 49.99, 'Personal', '2024-08-07', '2024-07-31'),
    ('Yoga Mat', '6mm, non-slip', 180, 19.99, 'Fitness', '2024-08-02', '2024-07-25'),
    ('Dumbbells', 'Adjustable, 20kg', 70, 99.99, 'Fitness', '2024-08-03', '2024-07-26'),
    ('Treadmill', 'Foldable, LCD display', 15, 499.99, 'Fitness', '2024-08-01', '2024-07-27'),
    ('Exercise Bike', 'Magnetic resistance', 20, 399.99, 'Fitness', '2024-08-05', '2024-07-28'),
    ('Jump Rope', 'Speed rope, adjustable', 250, 14.99, 'Fitness', '2024-08-06', '2024-07-29'),
    ('Resistance Bands', 'Set of 5, various strengths', 300, 24.99, 'Fitness', '2024-08-04', '2024-07-30'),
    ('Bicycle', 'Mountain bike, 21-speed', 30, 499.99, 'Fitness', '2024-08-07', '2024-07-31'),
    ('Helmet', 'Bicycle, adjustable size', 150, 49.99, 'Accessories', '2024-08-02', '2024-07-25'),
    ('Backpack', 'Water-resistant, 25L', 200, 59.99, 'Accessories', '2024-08-03', '2024-07-26'),
    ('Sleeping Bag', '3-season, compact', 75, 79.99, 'Outdoor', '2024-08-01', '2024-07-27'),
    ('Tent', '2-person, waterproof', 40, 129.99, 'Outdoor', '2024-08-05', '2024-07-28'),
    ('Camping Stove', 'Portable, propane', 60, 59.99, 'Outdoor', '2024-08-06', '2024-07-29'),
    ('Hiking Boots', 'Waterproof, high ankle', 100, 149.99, 'Outdoor', '2024-08-04', '2024-07-30'),
    ('Flashlight', 'LED, rechargeable', 150, 29.99, 'Outdoor', '2024-08-07', '2024-07-31');



select Prod_name as "Product Name" , Unitprice as "Unit Price" , Prod_description as "Product Description"
from products
where Last_Sold > "2024-07-15" and stock >= 50;

select sum(stock*unitprice) as "Value of all product in stock"
from products;

select Prod_category as "Category" , sum(stock) as "in stock"
from products
group by Prod_category
having sum(stock) > 600;

select prod_name as "Product Name", count(*) as "Sold count" from products 
where last_sold <= date(now()) and last_sold > date_add(now(), INTERVAL -1 MONTH)
group by prod_name 
having prod_name like "%camera%";

select * from products 
where added_to_stock < "2024-07-28" 
AND unitprice BETWEEN 299.99 and 499.99;



